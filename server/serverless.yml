
service: poke-starter-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItee
        - dynamodb:DescribeTable

      Resource:
        - Fn::Join: ['', [Fn::GetAtt: [ cmsTable, Arn ], '/*'] ]
        - Fn::Join: ['', [Fn::GetAtt: [ cmsTable, Arn ]] ]
  
  environment:
    STAGE: ${self:provider.stage}
    local_endpoint: 'http://localhost:8000'
    starter_pokemons: charmander,bulbasaur,squirtle

custom:
  serverless-offline:
    httpPort: 4000

  dynamodb:
    stages:
      - dev
    start:
      port: 8000

functions:
  registerUser:
    handler: microservice/registerUser.execute
    events:
      - http:
          path: user/register
          method: post
          cors: true

  getUser:
    handler: microservice/getUser.execute
    events:
      - http:
          path: user/info/{username}
          method: get
          cors: true

  addPokemon:
    handler: microservice/addPokemon.execute
    events:
      - http:
          path: user/info/{username}
          method: post
          cors: true

  getStarterPokemon:
    handler: microservice/getStarterPokemons.execute
    events:
      - http:
          path: pokemon/starters
          method: get
          cors: true

  getPokemon:
    handler: microservice/getPokemon.execute
    events:
      - http:
          path: pokemon/info/{nameId}
          method: get
          cors: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S

        KeySchema:
          - AttributeName: username
            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-dynamodb-local
  - serverless-offline

